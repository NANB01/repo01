Learn Protractor (Angular Testing) from scratch + Framework:

	Install commands List:
		- Below are the mandatory commands for getting started
		- npm install -g protractor
		- webdriver-manager update
		- webdriver manager 
		
	Important Note
		In the Next lecture, I will demo the instructions on downloading Eclipse editor.  When asked to download, Please download the software with name :  Eclipse IDE for JavaScript and Web Developers from below link
		https://www.eclipse.org/downloads/packages/release/oxygen/3a
		latest Version of Eclipse have serious bugs which may interrupt test execution. So use above stable version link to navigate and download.
		
Code download
describe('Protractor baby steps',function() {  

it('Open Angular js website',function() {

//write your protractor raw code

})

//Each it block will be called as a spec

it('close browswer', function() {

// code to close browser
})

})



File reference
exports.config = {
seleniumAddress : 'http://localhost:4444/wd/hub',

    specs: ['spec1.js'],
 
}

Links to read more on promises
https://spin.atomicobject.com/2014/12/17/asynchronous-testing-protractor-angular/
https://www.sohamkamani.com/blog/2016/03/14/wrapping-your-head-around-async-programming/
https://bridge360blog.com/2015/05/05/improving-protractor-tests-using-shared-functions-and-promises/



code download
/**
 * 
 */

//print numbers from 1 to 100

for(var i=0;i<=100;i=i+5)
{
console.log(i);
}

var j=1;
while (j<5)
{

console.log(j)
j++;
}
//***********************************************************************
var k =10;

do
{
console.log(k)
k++;

}while(k<6)



Code download
/**
 * http://usejsdoc.org/
 */
function add(a,b)
{
return a+b;
}

console.log(add(2,3));
console.log(add(5,3));

console.log(add(4,3));

console.log(add(2,3));
console.log(add(2,6));
console.log(add(2,4));
console.log(add(2,2));
console.log(add(2,9));
console.log(add(2,12));

var a=4;
var b= ["hello","world","4","goodbye"];

console.log(b.length+ "is the size of the array");
for(var i=0;i<b.length;i++)
{
console.log(b[i]);
}

var c= new Array();

c[0]= "goodbye";
c[1]="4";
c[2]="world";
c[3]="hello";
c[4]="bad";
//length - 1 will be the maximum index
console.log(c.length+ "is the size of the array called C");

for(var i=0;i<c.length;i++)
{
console.log(c[i]);
}
console.log("Print the array numbers in reverse");
for(var j=c.length-1;j>=0;j--)
{
console.log(c[j]);
}

var name ="Rahul"; // String literal declaration

console.log(name.charAt(3));

var newname=name.concat("Shetty");
console.log(newname);

console.log(name.indexOf("u"));

console.log(name.slice(1, 4));
//starting index is inclusive - ending index is exclusive

console.log(name.toUpperCase());

var name ="Rahul ";

console.log(name.trim());

var name2=new String("Rahul");  // string object declaration



Important Note
JavaScript Topics are not yet over !!
There is one more important topic called "JavaScript Objects" which you will learn in detail in Section 9
For now please continue in the order where videos are arranged and lets switch back to Protractor!



Browser configuration file
// An example configuration file
exports.config = {
  // The address of a running selenium server.
  seleniumAddress: 'http://localhost:4444/wd/hub',
 
  // Capabilities to be passed to the webdriver instance.
  capabilities: {
    browserName: 'chrome'
  },
 
  // Spec patterns are relative to the configuration file location passed
  // to protractor (in this example conf.js).
  // They may include glob patterns.
  specs: ['example-spec.js'],
 
 
};



Code download
describe('Chain locators demo',function() {  

it('Open Angular js website',function() {
browser.get('http://juliemr.github.io/protractor-demo/');
//repeater ,  chain locators, And css for identical tags
element(by.model("first")).sendKeys("3");
element(by.model("second")).sendKeys("5");

element(by.id("gobutton")).click();

element(by.repeater("result in memory")).element(by.css("td:nth-child(3)")).getText().then(function(text)
{
console.log(text);
})

// element(by.model("operator")).element(by.css("option:nth-child(4)")).click();

})

})



Code download
describe('Protractor Element Demo',function() {  
function Add(a,b)
{
element(by.model("first")).sendKeys(a);
element(by.model("second")).sendKeys(b);

element(by.id("gobutton")).click();

}

it('Locators',function() {

/*browser.waitForAngularEnabled(false);
browser.get("http://google.com");//non angular apps*/
browser.get('http://juliemr.github.io/protractor-demo/');

Add(2,3);
Add(4,3);
Add(8,3);
Add(2,3);
Add(9,3);
Add(0,3);

element.all(by.repeater("result in memory")).each(function(item)
{
item.element(by.css("td:nth-child(3)")).getText().then(function(text)
{

console.log(text);
})

})

})

})



Code download
describe('Protractor Element Demo',function() {  
function Calc(a,b,c)
{
element(by.model("first")).sendKeys(a);
element(by.model("second")).sendKeys(b);

//
element.all(by.tagName("option")).each(function(item)
{
item.getAttribute("value").then(function(values)

{

if(values==c)
{
item.click();
}

})
})

element(by.id("gobutton")).click();
}

it('Locators',function() {

/*browser.waitForAngularEnabled(false);
browser.get("http://google.com");//non angular apps*/
browser.get('http://juliemr.github.io/protractor-demo/');

Calc(3,5,"MULTIPLICATION");

Calc(3,5,"DIVISION");
Calc(3,5,"DIVISION");
Calc(10,6,"ADDITION");
element.all(by.repeater("result in memory")).each(function(item)
{
item.element(by.css("td:nth-child(3)")).getText().then(function(text)
{
console.log(text);
})

})

})

})



Code download
describe('Actions demo',function() {  

it('Open Posse website',function() {
//moving the mouse into that textbox
//sendkeys
//keyboard arrow
//Keyboard enter
browser.get("https://posse.com/");
element(by.model("userInputQuery")).sendKeys("river");
browser.actions().mouseMove(element(by.model("locationQuery")).sendKeys("london")).perform();

browser.actions().sendKeys(protractor.Key.ARROW_DOWN).perform();
browser.actions().sendKeys(protractor.Key.ENTER).perform().then(function()
{

browser.sleep(2000);
expect(element.all(by.css("div[ng-mouseover*='onSearchResultOver']")).count()).toEqual(7);

element.all(by.css("div[ng-mouseover*='onSearchResultOver']")).get(0).click();
element(by.css("a[ng-href*='London/River Island']")).click().then(function()
{
browser.sleep(2000);
})



Code download
describe('Protractor Alert steps',function() {  


it('Open NonAngular js website Alerts',function() {

browser.waitForAngularEnabled(false);
browser.get("http://qaclickacademy.com/practice.php");
element(by.id("confirmbtn")).click();

browser.switchTo().alert().dismiss().then(function()

{
//10sec
browser.sleep(5000);
})

})

//browser.get() will hit url on the browser
// write your raw protractor code

//Each it block will be called as a spec

it('close browswer', function() {

// code to close browser
})

})
//first parameter- Test suite name
//Second parameter - function (function wil have all tests (it blocks)

//first parameter- Test case  name





Code download
describe('Protractor Alert steps',function() {  

it('Open NonAngular js website Alerts',function() {

//rahulonlinetutor@gmail.com

browser.waitForAngularEnabled(false);

browser.driver.manage().window().maximize();

browser.get("http://qaclickacademy.com/practice.php");
browser.switchTo().frame("courses-iframe");
element(by.css("a[href*='sign_in']")).getText().then(function(text)
{

console.log(text);
})

})

//browser.get() will hit url on the browser
// write your raw protractor code

//Each it block will be called as a spec

})
//first parameter- Test suite name
//Second parameter - function (function wil have all tests (it blocks)

//first parameter- Test case  name



Code download
describe('Protractor Alert steps',function() {  

function selectItems(product)
{
//take 4 cards into list
//go through each index in the list - and get the title= if title =desired title then in that index i will select add button
element.all(by.tagName("app-card")).each(function(item)
{

item.element(by.css("h4 a")).getText().then(function(text)
{
if(text=="Samsung Note 8")
{
item.element(By.css("button[class*='btn-info']")).click();
}
}) })
}
it('Open NonAngular js website Alerts',function() {

browser.get("https://qaclickacademy.github.io/protocommerce/");

element(by.name("name")).sendKeys("Mystudents");
element(by.css("input[name='email']")).sendKeys("mystudents@gmail.com");
element(by.id("exampleInputPassword1")).sendKeys("password2");
element(by.css("input[type='checkbox']")).click();
element(by.cssContainingText("[id='exampleFormControlSelect1'] option","Female")).click();
element.all(by.name("inlineRadioOptions")).first().click();
element(by.buttonText("Submit")).click().then(function()
{
element(by.css("div[class*='success']")).getText().then(function(text)
{
console.log(text);
})
})
element(by.name("name")).clear();
element(by.name("name")).sendKeys("M").then(function()
{
element(by.css("[class='alert alert-danger']")).getText().then(function(text)
{
console.log(text);
})
})
element(by.linkText("Shop")).click();
selectItems("Samsung Note 8");
selectItems("iphone X");

element(by.partialLinkText("Checkout")).getText().then(function(text)
{
var res=text.split("(");
var x=Number(res[1].trim().charAt(0));

var y=x+1;
console.log(y);
expect(res[1].trim().charAt(0)).toBe(y);
})

})

})



***Important Information before watching Next Lectures*****
From Next Section- We will start learning and Building the Protractor Frameworks from Scratch.
As Explained in Lecture 2,( Please refer once if you had not)
This course comes with 2 different Frameworks-
1. Protractor TypeScript Cucumber Framework - Section 12-  Section 16
2. Protractor Javascript Jasmine Framework    -Section 17 - Section 22
If you wish to do Automation using Typescript Framework Please watch from Section 12-  Section 16
If you wish to Automate using  Javascript Framework then You can skip section 12- 16, and start directly from Section 17 -22  to learn Framework.
If you want to learn everything- Then just follow in the order on how these videos are published.
Please Note
Before We jump into Framework Design using Typescript,
First, lets Learn and Understand Typescript Basics in this Section thoroughly and then Jump into Framework Design using Typescript from Next section.

From this Section, We shall learn on Developing Protractor JavaScript Framework from Scratch.
Please note that these sections have no connection with Past 4 sections as they are Typescript Based.
We assume that you have gone through till Section 10 to Understand Protractor API using JavaScript and from here on wards we will develop framework using JavaScript for the Protractor tests which have developed till Section 10.



Code download
//Jsobjectdemo.js

/**
 * http://usejsdoc.org/
 */
function  car()
{

this.firstinput=element(by.model("first"));

this.secondinput=element(by.model("second"));
this.goButton=element(by.id("gobutton"));
this.result=element(by.css("h2[class='ng-binding']"));
this.color="red";
this.engine="turbo";
this.brand="BMW";
this.search="by.css('input')";

this.getURL=function()
{

browser.get('http://juliemr.github.io/protractor-demo/');
};

};

  module.exports= new car();
 /* a.getModel();
  console.log(a.engine);*/

//JsobjectDemo2.js

     var obj=  require("./Jsobjectdemo.js");
     
     obj.getModel();
     console.log(obj.search);




****************************************************************************************
1. Here after Your next learning Goal is to get master in Mobile Automation (Appium) just like how you have done with Web in this course using Protractor . Below is the coupon for the Appium course
https://www.udemy.com/course/mobile-automation-using-appiumselenium-3/?couponCode=62307212D5DFAC428E5C

2. Once you are done with Mobile learning then jump into API Automation Testing which is must for every Software Engineer. You can get Mastered in API Testing with the help of my below course coupons:
If you want to master API Automation using SoapUI tool, then below course will help
https://www.udemy.com/course/webservices-testing-with-soap-ui/?couponCode=85DDD1B9C245557EBEF0
If you want to master API Automation using Java, then below course will help
https://www.udemy.com/course/rest-api-automation-testing-rest-assured/?couponCode=0ED50418767EAFEDA0D7

3. Interested in JIRA- Project Management tool for Agile Scrum Management.? Below is the course which explains end to end Real time Project duties and responsibilities using JIRA tool for Agile Scrum Projects with deeper understanding of Software Testing concepts
https://www.udemy.com/course/learn-software-testing-in-practical-become-a-qa-expert/couponCode=0A82ABCD90E970F7EEA9

4. You can Master in Performance Testing with Open source testing tool "JMETER". Check out below course to learn JMETER from scratch and become powerful Load Tester
https://www.udemy.com/course/learn-jmeter-from-scratch-performance-load-testing-tool/?couponCode=2379523AB5A0DE8D67A1

***************************************************************************************
Newly Launched Course :If you want to be an SDET/Automation Architect with advanced Skills in Automation field, Then below course helps.
This Full stack QA Tutorial helps you to transform your career from QA Engineer to SDET/Test Architect by teaching all latest technologies like Dockers, Jackson API, Jenkin Pipelines, Data Structures using Java Streams, Window batch Scripting, Database readers, GIt  and many more !!!!!!!!
https://www.udemy.com/course/sdettraining-testarchitect-fullstackqa/?couponCode=DA6773CB016A0A07DE80
********************************************************************************************

5. And Finally you should not miss the 1 powerful course to Understand and implement Cucumber Framework which is common Platform for Web, Mobile and API Automation.
You can get complete knowledge on this tool by checking out my below course
https://www.udemy.com/course/cucumber-tutorial/?couponCode=EB5BA603EC7BF351693A










STOPPED AT VIDEO 90 i.e. download video #90 (Now on -> Section 10: Real time project in building Protractor tests)